/* style.css */

:root {
  --gold: #b9994d;
  --charcoal: #0d0e0a;
  --light: #f4f4f4;
}

body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
  line-height: 1.6;
  background: var(--light);
  color: var(--charcoal);
}

header {
  background: var(--charcoal);
  color: var(--gold);
  padding: 2rem 1rem;
  text-align: center;
}

header h1 {
  margin: 0;
  font-size: 2.5rem;
}

header p {
  font-size: 1.2rem;
  color: #ddd;
}

nav {
  margin-top: 1rem;
}

nav a {
  color: var(--gold);
  text-decoration: none;
  margin: 0 10px;
  font-weight: bold;
}

nav a:hover {
  color: #fff;
}

section {
  padding: 2rem 1rem;
  max-width: 900px;
  margin: auto;
}

h2 {
  color: var(--charcoal);
  margin-bottom: 1rem;
  border-bottom: 2px solid var(--gold);
  display: inline-block;
  padding-bottom: 0.25rem;
}

.projects {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1.5rem;
}

.card {
  background: #fff;
  border: 1px solid #ddd;
  padding: 1rem;
  border-radius: 8px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.1);
}

.card h3 {
  color: var(--gold);
}

.card a {
  display: inline-block;
  margin-top: 0.5rem;
  color: var(--charcoal);
  text-decoration: none;
  border: 1px solid var(--gold);
  padding: 0.3rem 0.6rem;
  border-radius: 4px;
  transition: 0.3s;
}

.card a:hover {
  background: var(--gold);
  color: #fff;
}

footer {
  background: var(--charcoal);
  color: var(--gold);
  text-align: center;
  padding: 1rem;
  margin-top: 2rem;
}
<script>
  (function(){
    const init = () => {
      const row = document.querySelector('.certs-row');
      if (!row) return;

      // Build a basic lightbox container once
      const overlay = document.createElement('div');
      overlay.style.cssText = "position:fixed;inset:0;background:rgba(0,0,0,.85);display:none;align-items:center;justify-content:center;z-index:9999;";
      overlay.innerHTML = `
        <div style="position:relative;max-width:92vw;max-height:86vh;">
          <button id="certsClose" aria-label="Close" style="position:absolute;top:-42px;right:-6px;width:36px;height:36px;border-radius:999px;border:1px solid rgba(255,255,255,.35);background:#111;color:#fff;font-size:18px;cursor:pointer">×</button>
          <img id="certsFull" alt="Certificate" style="max-width:92vw;max-height:86vh;border-radius:10px;display:block" />
          <div id="certsCap" style="color:#fff;opacity:.9;margin-top:8px;font-size:.95rem;text-align:center"></div>
        </div>`;
      document.body.appendChild(overlay);

      const full = overlay.querySelector('#certsFull');
      const cap = overlay.querySelector('#certsCap');
      const closeBtn = overlay.querySelector('#certsClose');

      row.addEventListener('click', (e) => {
        const img = e.target.closest('.certs-thumb');
        if (!img) return;
        const card = img.closest('.certs-card');
        const name = card.querySelector('.certs-name')?.textContent || '';
        const issuer = card.querySelector('.certs-issuer')?.textContent || '';
        full.src = img.src; // Option B: use the same file
        cap.textContent = issuer ? `${name} · ${issuer}` : name;
        overlay.style.display = 'flex';
      });

      const close = () => overlay.style.display = 'none';
      closeBtn.addEventListener('click', close);
      overlay.addEventListener('click', (e) => { if (e.target === overlay) close(); });
      document.addEventListener('keydown', (e) => { if (e.key === 'Escape' && overlay.style.display === 'flex') close(); });
    };

    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', init);
    } else {
      init();
    }
  })();
</script>

<!--Certification Section Styling -->
<style>
  /* Scope to #certs to avoid conflicts */
  #certs { --gold: var(--gold, #b9994d); --fg: var(--charcoal, #0d0e0a); --bg: var(--light, #f4f4f4); }
  .certs-section { margin: 2rem 0; }
  .certs-title { margin: 0 0 .25rem 0; font-size: clamp(1.1rem, 1vw + 1rem, 1.6rem); }
  .certs-sub { margin: 0 0 .75rem 0; color: #777; font-size: .95rem; }

  /* Horizontal scrollable row with snap */
  .certs-row {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: 240px;
    gap: 12px;
    overflow-x: auto;
    padding: 10px;
    border-radius: 12px;
    background: rgba(0,0,0,0.04);
    scroll-snap-type: x mandatory;
    scrollbar-width: thin;
  }
  .certs-card {
    scroll-snap-align: start;
    background: #fff;
    border: 1px solid rgba(0,0,0,0.07);
    border-radius: 12px;
    padding: 10px;
    display: flex; flex-direction: column; gap: 6px;
  }
  .certs-thumb {
    width: 100%;
    aspect-ratio: 4/3;
    object-fit: contain;
    background: #fafafa;
    border: 1px solid rgba(0,0,0,0.06);
    border-radius: 8px;
    cursor: zoom-in;
    transition: transform .12s ease;
  }
  .certs-thumb:hover { transform: translateY(-2px) scale(1.02); }
  .certs-meta { display: grid; gap: 2px; }
  .certs-name { font-size: .93rem; }
  .certs-issuer { font-size: .8rem; color: #6b6b6b; }

  @media (max-width: 520px) { .certs-row { grid-auto-columns: 180px; } }
</style>

<<<<<<< Updated upstream
<!-- Tiny JS lightbox (no external libs required) -->
<script>
  (function(){
    const row = document.querySelector('.certs-row');
    if (!row) return;

    // Build a basic lightbox container once
    const overlay = document.createElement('div');
    overlay.style.cssText = `position:fixed;inset:0;background:rgba(0,0,0,.85);display:none;align-items:center;justify-content:center;z-index:9999;`;
    overlay.innerHTML = `
      <div style="position:relative;max-width:92vw;max-height:86vh;">
        <button id="certsClose" aria-label="Close" style="position:absolute;top:-42px;right:-6px;width:36px;height:36px;border-radius:999px;border:1px solid rgba(255,255,255,.35);background:#111;color:#fff;font-size:18px;cursor:pointer">×</button>
        <img id="certsFull" alt="Certificate" style="max-width:92vw;max-height:86vh;border-radius:10px;display:block" />
        <div id="certsCap" style="color:#fff;opacity:.9;margin-top:8px;font-size:.95rem;text-align:center"></div>
      </div>`;
    document.body.appendChild(overlay);

    const full = overlay.querySelector('#certsFull');
    const cap = overlay.querySelector('#certsCap');
    const closeBtn = overlay.querySelector('#certsClose');

    row.addEventListener('click', (e) => {
      const img = e.target.closest('.certs-thumb');
      if (!img) return;
      const card = img.closest('.certs-card');
      const name = card.querySelector('.certs-name')?.textContent || '';
      const issuer = card.querySelector('.certs-issuer')?.textContent || '';
      full.src = img.src;
      cap.textContent = issuer ? `${name} · ${issuer}` : name;
      overlay.style.display = 'flex';
    });

    const close = () => overlay.style.display = 'none';
    closeBtn.addEventListener('click', close);
    overlay.addEventListener('click', (e) => { if (e.target === overlay) close(); });
    document.addEventListener('keydown', (e) => { if (e.key === 'Escape' && overlay.style.display === 'flex') close(); });
  })();
</script>
=======

>>>>>>> Stashed changes


